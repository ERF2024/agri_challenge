<?xml version="1.0"?>

<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur5_robot">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->

  <xacro:include filename="$(find agri_gazebo_scene)/urdf/ur_macro.xacro" />
    <gazebo>
      <plugin name="ros_control" filename="libgazebo_ros_control.so">
        <!--robotNamespace>/</robotNamespace-->
        <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->
      </plugin>
    </gazebo>

  <!--Declare arguments -->
  <arg name="joint_limit_params" default="$(find ur_description)/config/ur5/joint_limits.yaml"/>
  <arg name="kinematics_params" default="$(find ur_description)/config/ur5/default_kinematics.yaml"/>
  <arg name="physical_params" default="$(find ur_description)/config/ur5/physical_parameters.yaml"/>
  <arg name="visual_params" default="$(find ur_description)/config/ur5/visual_parameters.yaml"/>
  <arg name="prefix1" default="left_" />
  <arg name="prefix2" default="right_" />
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/EffortJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
  <xacro:ur_robot_gazebo
    prefix="$(arg prefix1)"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <xacro:ur_robot_gazebo
    prefix="$(arg prefix2)"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->
   <link name="world"/>
  <joint name="world_joint" type="fixed">
    <parent link="world"/>
    <child link="$(arg prefix1)base_link"/>
    <origin xyz="0 0 1" rpy="0 0 0"/>
    <axis xyz="0 0 0" />
  </joint>

  <joint name="connect_joint" type="fixed">
    <parent link="$(arg prefix1)base_link"/>
    <child link="$(arg prefix2)base_link"/>
    <origin xyz="0 -0.8 0" rpy="0 0 0"/>
  </joint>

  <link name="tool0_controller"/>
  <joint name="tool_controller_fake_joint" type="fixed">
    <parent link="$(arg prefix1)tool0"/>
    <child link="tool0_controller"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <link name="$(arg prefix1)support">
    <visual>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/../../models/Supporto UR5 Realsense.stl" scale="0.001 0.001 0.001"/>
     </geometry>
   </visual>
   <collision>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/../../models/Supporto UR5 Realsense.stl" scale="0.001 0.001 0.001" />
     </geometry>
   </collision>
  </link>

  <joint name="$(arg prefix1)support_joint" type="fixed">
    <parent link="$(arg prefix1)tool0"/>
    <child link="$(arg prefix1)support"/>
    <origin xyz="0 0 0.001" rpy="0 0 0"/>
  </joint>

  <link name="$(arg prefix2)support">
    <visual>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/../../models/Supporto UR5 Realsense.stl" scale="0.001 0.001 0.001"/>
     </geometry>
   </visual>
   <collision>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/../../models/Supporto UR5 Realsense.stl" scale="0.001 0.001 0.001" />
     </geometry>
   </collision>
  </link>

  <joint name="$(arg prefix2)support_joint" type="fixed">
    <parent link="$(arg prefix2)tool0"/>
    <child link="$(arg prefix2)support"/>
    <origin xyz="0 0 0.001" rpy="0 0 0"/>
  </joint>

 
  <link name="$(arg prefix1)qbsh">
    <visual>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/meshes/qbsh_left.stl"/>
     </geometry>
   </visual>
   <collision>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/meshes/qbsh_left_closed.stl"/>
     </geometry>
   </collision>
  </link>

  <link name="$(arg prefix2)qbsh">
    <visual>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/meshes/qbsh_left.stl"/>
     </geometry>
   </visual>
   <collision>
     <origin xyz="0 0 0" rpy="0 0 0" />
     <geometry>
        <mesh filename="package://agri_gazebo_scene/meshes/qbsh_left_closed.stl" />
     </geometry>
   </collision>
  </link>

  <joint name="$(arg prefix1)qbsh_joint" type="fixed">
    <parent link="$(arg prefix1)support"/>
    <child link="$(arg prefix1)qbsh"/>
    <origin xyz="0 0 0" rpy="0 0 3.14"/>
  </joint>

  <joint name="$(arg prefix2)qbsh_joint" type="fixed">
    <parent link="$(arg prefix2)support"/>
    <child link="$(arg prefix2)qbsh"/>
    <origin xyz="0 0 0" rpy="0 0 3.14"/>
  </joint>
  
  <!-- Cameras -->
  <link name="central_camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 -0.523599 0"/>
      <geometry>
        <box size="0.05 0.1 0.05"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
     <origin xyz="0 0 0" rpy="0 -0.523599 0" />
     <geometry>
        <box size="0.05 0.1 0.05"/>
     </geometry>
   </collision>
  </link>

  <joint name="central_camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 -0.4 0" rpy="0 0 0"/>
    <parent link="$(arg prefix1)base_link"/>
    <child link="central_camera_link"/>
  </joint>

  <gazebo reference="central_camera_link">
      <sensor type="depth" name="central_camera">
        <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>central_camera</cameraName>
        <imageTopicName>/central_camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/central_camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/central_camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/central_camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/central_camera/depth/points</pointCloudTopicName>
        <frameName>central_camera_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
      </sensor>
    </gazebo>

  <joint name="$(arg prefix1)camera_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0 0.07 -0.02" rpy="0 -1.57 1.57"/>
    <parent link="$(arg prefix1)support"/>
    <child link="$(arg prefix1)camera_link"/>
  </joint>

  <link name="$(arg prefix1)camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.07 0.025"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.07 0.025"/>
      </geometry>
    </collision>
  </link>

  <gazebo reference="$(arg prefix1)camera_link">
      <sensor type="depth" name="$(arg prefix1)camera">
        <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>$(arg prefix1)</cameraName>
        <imageTopicName>/$(arg prefix1)camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/$(arg prefix1)camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/$(arg prefix1)camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/$(arg prefix1)camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/$(arg prefix1)camera/depth/points</pointCloudTopicName>
        <frameName>$(arg prefix1)camera_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
      </sensor>
    </gazebo>


  <joint name="$(arg prefix2)camera_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="0 0.07 -0.02" rpy="0 -1.57 1.57"/>
    <parent link="$(arg prefix2)support"/>
    <child link="$(arg prefix2)camera_link"/>
  </joint>

  <link name="$(arg prefix2)camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.07 0.025"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.025 0.07 0.025"/>
      </geometry>
    </collision>
  </link>

  <gazebo reference="$(arg prefix2)camera_link">
      <sensor type="depth" name="$(arg prefix2)camera">
        <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>$(arg prefix2)</cameraName>
        <imageTopicName>/$(arg prefix2)camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/$(arg prefix2)camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/$(arg prefix2)camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/$(arg prefix2)camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/$(arg prefix2)camera/depth/points</pointCloudTopicName>
        <frameName>$(arg prefix1)camera_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
      </sensor>
    </gazebo>

</robot>
